<#@ template hostspecific="false" language="C#" #>
<#@ output extension=".h" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<#
static IEnumerable<string> CreateTypeParameters(int i)
    => Enumerable.Range(0, i).Select(x => "typename T" + (x + 1));

static IEnumerable<string> CreateTypeArguments(int i)
    => Enumerable.Range(0, i).Select(x => "T" + (x + 1));
#>

template <typename T>
struct is_function : public false_type {};
<#
for (int i = 0; i <= 16; i++)
{
#>

template <<#= string.Join(", ", CreateTypeParameters(i).Prepend("typename Ret")) #>>
struct is_function<Ret (*)(<#= string.Join(", ", CreateTypeArguments(i)) #>)> : public true_type {};

template <<#= string.Join(", ", CreateTypeParameters(i).Prepend("typename Ret")) #>>
struct is_function<Ret (*)(<#= string.Join(", ", CreateTypeArguments(i).Append("...")) #>)> : public true_type {};
<#
}
#>
