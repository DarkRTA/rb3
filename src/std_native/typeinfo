#ifndef _TYPEINFO
#define _TYPEINFO

#include <exception>

namespace std {

    class type_info {
    public:
        virtual ~type_info();
        bool operator==(const type_info &rhs) const noexcept;
        bool before(const type_info &rhs) const noexcept;
        size_t hash_code() const noexcept;
        const char *name() const noexcept;

        type_info(const type_info &) = delete;
        type_info &operator=(const type_info &) = delete;
    };

    class bad_cast : public exception {
    public:
        virtual ~bad_cast() {
        }
        virtual const char *what() const {
            return "bad_cast";
        }
    };

    class bad_typeid : public exception {
    public:
        virtual ~bad_typeid() {
        }
        virtual const char *what() const {
            return "bad_typeid";
        }
    };
}

#endif
